📌 𝐃𝐀𝐘 56 #100𝐝𝐚𝐲𝐬𝐨𝐟𝐜𝐨𝐝𝐞𝐜𝐡𝐚𝐥𝐥𝐞𝐧𝐠𝐞  
📌𝐐𝐮𝐞𝐬𝐭𝐢𝐨𝐧:  𝐌𝐞𝐝𝐢𝐚𝐧 𝐨𝐟 𝐓𝐰𝐨 𝐒𝐨𝐫𝐭𝐞𝐝 𝐀𝐫𝐫𝐚𝐲𝐬  

Link:https://lnkd.in/dnKg4E24  
📌 𝐀𝐩𝐩𝐫𝐨𝐚𝐜𝐡:  
✅The given code is a C++ solution to find the median of two sorted arrays nums1 and nums2. The algorithm merges the two arrays into a single sorted array called ans.  
✅The size of the merged array is calculated by adding the sizes of nums1 and nums2. This determines the total number of elements in the merged array, which is stored   
in the variable newSize.    
✅The elements of nums1 are copied into the first part of the ans array using a loop. Then, the elements of nums2 are copied into the remaining part of the   
ans array, adjusting the index to start from nums1.size().  
✅After merging the arrays, the ans array is sorted using the sort function from the C++ Standard Library. This ensures that the elements are in ascending order.  
✅Finally, the median of the merged array is calculated. If the total number of elements in the merged array is odd (newSize % 2 != 0),  
the median is the middle element ans[(newSize - 1) / 2]. If the total number of elements is even, the median is calculated as the average of the   
two middle elements: (ans[newSize / 2 - 1] + ans[newSize / 2]) / 2.0.   The median value is stored in the variable median and returned as the result of the function.    
